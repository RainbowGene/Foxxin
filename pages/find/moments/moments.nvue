<template>
	<view>
		<!-- 渐变式导航 -->
		<free-transparent-bar :scrollTop="scrollTop" @clickRight="clickRight"></free-transparent-bar>
		<view class="position-relative" style="height: 620rpx;">
			<image src="/static/images/lixin.png" mode="scaleToFill" style="height: 590rpx;" class="bg-secondary w-100"
			 lazy-load></image>
			<image class="bg-light rounded position-absolute" :src="user.avatar||'/static/images/avatar/134.jpg'" style="width: 120rpx;height: 120rpx;bottom: 0;right: 30rpx;"></image>
			<text class="text-white position-absolute" style="bottom: 45rpx;right: 160rpx;">{{user.nickname}}</text>
		</view>
		<!-- 朋友圈列表样式 -->
		<block v-for="(item,index) in list" :key="index">
			<free-moment-list :item='item' :index="index" @action="doAction" @reply="replyEvent"></free-moment-list>
		</block>

		<!-- 评论框 -->
		<free-popup ref="action" Bottom maskColor>
			<view class="bg-light border-top flex-row align-center" style="height: 105rpx;">
				<!-- 文本输入框 -->
				<textarea fixed focus class="rounded bg-white font-md flex-1 mx-2" style="height:60rpx;line-height: 60rpx;" v-model="content"></textarea>
				<free-icon-btn @click="changeFaceModel">&#xe657;</free-icon-btn>
				<free-main-botton name="发送" :disabled="content.length===0" @click="send"></free-main-botton>
			</view>
			<!-- 表情 -->
			<scroll-view v-if="faceModel" scroll-y style="height: 350rpx;">
				<view class="flex-row flex-wrap bg-light">
					<view class="flex-row align-center justify-center" hover-class="bg-white" style="width: 107rpx;height: 107rpx;"
					 v-for="(item,i) in faceList" :key="i" @click="addFace(item)">
						<text>{{item}}</text>
					</view>
				</view>
			</scroll-view>
		</free-popup>

		<!-- 上拉加载 -->
		<view v-if="list.length>=10" class="flex-row align-center justify-center py-3 bg-light">
			<text class="text-light-muted font">{{loadmore}}</text>
		</view>
	</view>
</template>

<script>
	import freeTransparentBar from "@/components/free-ui/free-transparent-bar.vue"
	import freeMomentList from "@/components/free-ui/free-moment-list.vue"
	import freePopup from "@/components/free-ui/free-popup.vue"
	import freeIconBtn from "@/components/free-ui/free-icon-btn.vue"
	import freeMainBotton from "@/components/free-ui/free-main-button.vue"
	import $H from "@/common/free-lib/request.js"
	import {
		mapState
	} from "vuex"
	export default {
		components: {
			freeTransparentBar,
			freeMomentList,
			freePopup,
			freeIconBtn,
			freeMainBotton
		},
		data() {
			return {
				scrollTop: 0,
				content: '', // 输入内容
				commentIndex: -1, // 评论对象
				list: [],
				faceModel: false,
				faceList: ["😀", "😁", "😂", "😃", "😄", "😅", "😆", "😉", "😊", "😋", "😎", "😍", "😘", "😗", "😙", "😚", "😇",
					"😐", "😑", "😶", "😏", "😣", "😥", "😮", "😯", "😪", "😫", "😴", "😌", "😛", "😜", "😝", "😒", "😓", "😔", "😕",
					"😲", "😷", "😖", "😞", "😟", "😤", "😢", "😭", "😦", "😧", "😨", "😬", "😰", "😱", "😳", "😵", "😡", "😠"
				],
				page: 1,
				loadmore: '上拉加载更多',
				key: 'moment_timeline',
				reply_user: false,

				params: false
			}
		},
		computed: {
			...mapState({
				user: state => state.user.user
			}),
			nickname() {
				if (!this.params) {
					return this.user.nickname || this.user.username
				}
				return this.params.name
			},
			avatar() {
				let avatar = ''
				avatar = !this.params ? this.user.avatar : this.params.avatar
				return avatar || '/static/images/userpic.png'
			}
		},
		onPageScroll(e) {
			this.scrollTop = e.scrollTop
		},
		onReachBottom() {
			if (this.loadmore !== '上拉加载更多') return;
			this.page++;
			this.loadmore = '加载中...'
			this.getData().catch(err => {
				this.page--
				uni.showToast({
					title: '刷新失败',
					icon: 'none'
				});
				this.loadmore = '上拉加载更多'
			})
		},
		onPullDownRefresh() {
			this.page = 1
			this.getData().then(res => {
				uni.showToast({
					title: '刷新成功',
					icon: 'none'
				});
				uni.stopPullDownRefresh()
			}).catch(err => {
				uni.showToast({
					title: '刷新失败',
					icon: 'none'
				});
				uni.stopPullDownRefresh()
			})
		},
		onLoad(e) {
			if (e.key) this.key = e.key

			if (e.params) {
				this.params = JSON.parse(decodeURIComponent(e.params))
				console.log(this.params);
			}
			this.page = 1
			this.getData()

			// 在朋友圈页面开启朋友圈更新监听事件
			uni.$on('momentNotice', this.momentNotice)
		},
		destroyed() {
			uni.$off('momentNotice', this.momentNotice)
		},
		onShow() {
			// this.momentNotice()
		},
		methods: {
			getData() {
				return new Promise((resolve, reject) => {
					let page = this.page
					$H.get('/' + this.key + '/' + this.page, {}).then(res => {
						this.list = page === 1 ? res : [...this.list, ...res]
						this.loadmore = this.list.length === (this.page * 10) ? '上拉加载更多' : '没有更多了';
						resolve(res)
					}).catch(err => {
						reject(err)
					})
				})
			},
			// 点击更多
			doAction(e) {
				uni.showActionSheet({
					itemList: ['点赞', '评论'],
					success: res => {
						if (res.tapIndex === 0) {
							this.doSupport(e)
						} else {
							this.content = ''
							this.faceModel = false
							this.commentIndex = e.index
							this.reply_user = false
							this.$refs.action.show()
						}
					}
				})
			},
			// 点赞
			doSupport(e) {
				$H.post('/moment/like', {
					id: e.item.moment_id
				}).then(res => {
					let i = e.item.likes.findIndex(i => i.id === this.user.id)
					if (i !== -1) { // 取消点赞
						e.item.likes.splice(i, 1)
					} else { // 点赞
						e.item.likes.push({
							id: this.user.id,
							name: this.user.nickname || this.user.username
						})
					}
					uni.showToast({
						title: i !== -1 ? '取消成功' : '点赞+1',
						icon: 'none'
					});
				})
			},
			// 发送评论
			send() {
				let item = this.list[this.commentIndex]
				$H.post('/moment/comment', {
					id: item.moment_id,
					content: this.content,
					reply_id: this.reply_user ? this.reply_user.id : 0
				}).then(res => {
					item.comments.push({
						content: this.content,
						user: {
							id: this.user.id,
							name: this.user.nickname || this.user.username
						},
						reply: this.reply ? this.reply : null
					})
					uni.showToast({
						title: '评论成功',
						icon: 'none'
					})
				})
				this.$refs.action.hidden()
			},
			// 添加表情
			addFace(item) {
				this.content += item
			},
			// 表情栏开关
			changeFaceModel() {
				uni.hideKeyboard()
				setTimeout(() => {
					this.faceModel = !this.faceModel
				}, 100)
			},
			// 发表朋友圈页面
			clickRight() {
				let list = [{
					name: '图文',
					key: 'image'
				}, {
					name: '视频',
					key: 'video'
				}, {
					name: '文字',
					key: 'content'
				}, ]
				uni.showActionSheet({
					itemList: list.map(v => v.name),
					success: res => {
						if (res.tapIndex > -1) {
							uni.navigateTo({
								url: "../add-moment/add-moment?type=" + list[res.tapIndex].key
							})
						}
					}
				})
			},
			// 点击评论，回复评论
			replyEvent(e) {
				this.content = ''
				this.faceModel = false
				this.commentIndex = e.index
				this.reply_user = e.reply
				this.$refs.action.show()
			},
			momentNotice() {
				// 刷新当前页
				this.page = 1
				this.getData().then(res => {
					uni.showToast({
						title: '朋友圈已更新！',
						icon: 'none'
					});
				})
			}
		}
	}
</script>

<style lang="scss" scoped>
	.facelist {
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
	}
</style>
