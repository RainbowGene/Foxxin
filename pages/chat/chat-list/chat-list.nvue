<template>
	<!-- 推荐给朋友页面 -->
	<view class="page">
		<free-nav-bar showBack bgColor="bg-light">
			<free-main-botton slot="right" :name="muliSelect?('发送('+selectCount+')'):'多选'" @click="handleNavBtn"></free-main-botton>
		</free-nav-bar>
		<!-- 搜索框 -->
		<view class="p-3 bg-light position-fixed left-0 right-0" :style="'top:'+topHeight+'px;z-index:2;'">
			<input type="text" placeholder="搜索" class="bg-white rounded" placeholder-class="text-center" style="height: 80rpx;"
			 v-model="keyword" />
		</view>
		<!-- 搜索框的占位符 -->
		<view style="height: 140rpx;"></view>
		<free-list-item v-for="(item,i) in finallyList" :key="i" :title="item.name" showRight :showRightIcon="false" :cover="item.avatar || '/static/images/userpic.png'"
		 @click="handleItme(item)">
			<!-- 单选框 -->
			<view v-if="muliSelect" slot="right" class="user-border rounded-circle flex-row align-center justify-center" style="width: 40rpx;height: 40rpx;">
				<view v-show="item.ischecked" class="main-bg-color rounded-circle" style="width: 30rpx;height: 30rpx;"></view>
			</view>
		</free-list-item>

		<view v-if="!finallyList.length&&keyword" class="flex-row align-center justify-center" style="height: 100rpx;">
			<text class="font text-light-muted">没有任何结果</text>
		</view>

		<free-confirm ref="confirm" title="发送给：">
			<scroll-view v-if="selectCount > 0" scroll-x="true" :show-scrollbar="false">
				<view class="flex">
					<view class="mr-1" v-for="(item,index) in selectList" :key="index">
						<free-avatar :src="item.avatar" size="60"></free-avatar>
					</view>
				</view>
			</scroll-view>
			<view class="flex flex-row align-center" v-else>
				<free-avatar :src="sendItem.avatar" size="60"></free-avatar>
				<text class="font text-muted ml-2">{{sendItem.name}}</text>
			</view>
			<view class="my-3 bg-light rounded p-2">
				<text class="font text-light-muted">{{message}}</text>
			</view>
			<input type="text" class="border-bottom font-md" style="height: 60rpx;" placeholder="给朋友留言" v-model="content" />
		</free-confirm>

	</view>
</template>

<script>
	import freeNavBar from "@/components/free-ui/free-nav-bar.vue"
	import freeMainBotton from "@/components/free-ui/free-main-button.vue"
	import freeListItem from "@/components/free-ui/free-list-item.vue"
	import freeConfirm from '@/components/free-ui/free-confirm.vue';
	import freeAvatar from "@/components/free-ui/free-avatar.vue"
	import {
		mapState
	} from 'vuex'
	export default {
		components: {
			freeNavBar,
			freeMainBotton,
			freeConfirm,
			freeListItem,
			freeAvatar
		},
		data() {
			return {
				topHeight: 0,
				muliSelect: false,
				keyword: '', // 搜索关键字
				list: [],
				detail: {},
				sendItem: {},
				content: ''
			}
		},
		onLoad(e) {
			let res = uni.getSystemInfoSync()
			this.topHeight = res.statusBarHeight + uni.upx2px(90)

			this.list = this.chatList.map(item => {
				return {
					...item,
					ischecked: false
				}
			})

			if (e.params) {
				this.detail = JSON.parse(decodeURIComponent(e.params))
			}
		},
		computed: {
			...mapState({
				chatList: state => state.user.chatList,
				chat: state => state.user.chat
			}),
			// 选中的列表
			selectList() {
				return this.list.filter(item => item.ischecked)
			},
			// 选中数量
			selectCount() {
				return this.selectList.length
			},
			// 搜索结果的列表
			finallyList() {
				let searchList = this.list.filter(item => {
					return item.name.indexOf(this.keyword) !== -1
				})
				return this.keyword === '' ? this.list : searchList
			},
			message() {
				let obj = {
					image: "[图片]",
					video: "[视频]",
					audio: "[语音]",
					card: "[名片]",
					emoticon: "[表情]"
				}
				return this.detail.type === 'text' ? this.detail.data : obj[this.detail.type]
			}
		},
		methods: {
			// 多选中|发送按钮
			handleNavBtn() {
				if (!this.muliSelect) return this.muliSelect = true
				// 发送
				if (this.selectCount === 0) {
					return uni.showToast({
						title: '请先选择',
						icon: 'none'
					});
				}
				this.$refs.confirm.show((close) => {
					this.selectList.forEach(item => {
						this.send(item)
						if (this.content) {
							this.send(item, this.content, 'text')
						}
					})
					close()
					uni.reLaunch({
						url: "../../tabbar/index/index"
					})
				})
			},
			// item的发送|选中
			handleItme(item) {
				if (this.muliSelect) {
					// 限制选中数量
					if (this.selectCount === 9) {
						return uni.showToast({
							title: '最多选择9个',
							icon: 'none'
						})
					}
					return item.ischecked = !item.ischecked
				}
				// 单项发送:多选框为false
				this.sendItem = item
				this.$refs.confirm.show((close) => {
					this.send(item)
					if (this.content) {
						this.send(item, this.content, 'text')
					}
					close()
					uni.reLaunch({
						url: "../../tabbar/index/index"
					})
				})
			},
			// 发送封装
			send(item, data = false, type = false) {
				let message = this.chat.formatSendData({
					to_id: item.id,
					to_name: item.name,
					to_avatar: item.avatar,
					chat_type: item.chat_type,
					data: data || this.detail.data,
					type: type || this.detail.type,
					options: this.detail.options
				})
				this.chat.send(message)
			},
		}
	}
</script>

<style>

</style>
